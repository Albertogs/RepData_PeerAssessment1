mdata[, mean("rankingGDP", na.rm = TRUE), by ="Income.Group"]
mdata[, mean(rankingGDP, na.rm = TRUE), by =Income.Group]
mean(mdata[mdata$Income.Group=='High income: OECD',]$V2)
income_group <- group_by(mdata, Income.Group)
5040-504
(7^4)*(5^3)
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm ("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
?n
?n_distinct
?n
submit()
pack_sum <- summarize(by_package,
count = n() ,
unique = n_distinct(ip_id),
countries = n_distinct(country) ,
avg_bytes = mean(size))
pack_sum
sub()
submit()
reset()
submit()
pack_sum
quantile(pack_sum, probs=0.99)
quantile(pack_sum$count, probs=0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique>465)
View()
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(studens, sex, count, -grade)
gather(students, sex, count, -grade)
students2
?gather
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, col=sex_class,intoc("sex", "class"))
separate(res, col=sex_class,into=c("sex", "class"))
submit()
students3
?gather
submit()
submit()
submit()
submit()
reset()
submimt()
submit()
?spread()
?spread
submit()
submit()
submit()
submit()
submit()
extrat_numeric("class5")
extract_numeric("class5")
submit()
submit()
submit()
?mutate
submit()
students4
submit()
submit()
submit()
passed
failed
mutate(passed, status="passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% filed(status = "failed")
failed <- failed %>% mutate(status = "failed")
bind_rows(passed, failed)
sat
submit()
submit()
?group_by
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today()
this_day<-today()
this_day
month(this_day)
wday(this_day)
wday(this_day, label=TRUE)
now()
now(this_day)
this_moment <- now()
this_moment
minute(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
ymd("March 12, 1975")
mdy("March 12, 1975")
dmy("25081985")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms()dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 19, minutes = 42, seconds = 55)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15)+minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone="Asia/Hong_Kong")
arrive
last_time <- with_tz(mdy("June 17, 2008"), tzone="Asia/Hong_Kong")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
3.33-2.05
60+28
2.06 - 3.33
60+27
87+88
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
rug(low)
low
high
hist(ppm, col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
reg <-table(ppm$region)
reg <-table(pollution$region)
reg
barplot(reg, col="wheat", main="Number of Countries in Each Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(data=pollution,pm25~region, col="red")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(frow=c(2,1), mar=c(4,4,2,1))
par(mfrow=c(2,1), mar=c(4,4,2,1))
subset(pollution,"east")
?subset
east <- subset(pollution, <"east")
east <- subset(pollution, "east")
east <- subset(pollution, region <"east")
east <- subset(pollution, region =="east")
east
head(east)
hist(east$pm25, col="green")
hist((subset(pollution, reg==west))$pm25, col="green")
hist((subset(pollution, reg=="west"))$pm25, col="green")
west<-subset(pollution, reg=="west") hist(west$pm25, col="green")
west<-subset(pollution, reg=="west"); hist(west$pm25, col="green")
west<-subset(pollution, reg=="west")
hist(subset(pollution,region=="west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
?abline
abline(h=12, lwd =2, lty=2)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd =2, lty=2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west<- subset(pollution, region=="west")
plot(west$latitude,west$pm25, main="west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
library(swirl)
swirl()
quarz()
quarz
x11()
quartz()
?Devices
with(eruptions, waiting)
with(faithful,plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.curv()
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file="geyserplot.png")
dev.off()
cars
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income | region, data=state,layout=c(4,1))
xyplot(Life.Exp~Income | region, data=state,layout=c(2,2))
head(mpg)
dim(mpg)
tablÃ±r(mpg$model)
table(mpg$model)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab="Month",ylab="Ozone (ppb)", col.axis = "blue", col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind, Ozone))
title(mai="Ozone and Wind in New York City")
length(par())
names(par())
par()$spin
par()$pin
par()$fg
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, set="n")
plot(airquality$Wind, type="n",airquality$Ozone)
title(main="Wind and Ozone in NYC")
may <- airquality$Month==5
may <- subset(airquality, Month==5)
points(may$Wind, may$Ozone)
points(may$Wind, may$Ozone, col="blue", pch=17)
notmay <- subset(airquality, month=! 5)
notmay <- subset(airquality, month!= 5)
notmay <- subset(airquality, Month!= 5)
points(notmay$Wind, notmay$Ozone, col="red", pch=17)
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend("topright", pch=c(17,8), col=c("blue", "red"), legend=c("May","Other Months"))
dashed(lty=2)
hline(lty=2)
abline(lty=2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, title="Ozone and Wind")
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Wind, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
library(swirl)
swirl()
dist(dataFrame)
hc <-hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5,col="blue")
abline(h=0.4,col="red")
5
abline(h=0.05,col="green")
12
abline(h=0.05,col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.color(25))
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
library(swirl)
swirl()
cmat
plot(cx,cy, col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x,y,newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers=3)
kmObj$iter
plot(x,y,col=kmObj)
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers, col=c("black", "red","green"), pch=3, cex=3, lwd=3)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x, y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%diag%*%t(matv)
scale(svd)
svd()
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$u*svd1$d*(svd1$v)^t
points(x, y, pch=19, cex=2, col=cols1[newClust])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2]%*%diag(svd1$d[1:2])%*%t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,2:5]%*%diag(svd1$d[2:5])%*%t(svd1$v[,2:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
swirl()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject=1)
sub1 <- subset(ssd, subject==1)
dim(sub1)
names(sub1[, 1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(x[,1:3])
mdist <- dist(sub1[,1:3])
hclustering hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[, -c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dis(sub1[,10:12], maxCon)
mdist <- dis(sub1[,10:12])
mdist <- dist(sub1[,10:12], maxCon)
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kclust <- kmeans(sub1, centers = 6)
kclust <- kmeans(sub1)
kclust <- kmeans(sub1[, -c(562, 563)])
kclust <- kmeans(sub1[, -c(562, 563)], centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kclust$size==29)
laying <- which(kClust$size==29)
plot(kClust$centers[laying, 1:12], pch=19,ylab="Laying Cluster")
names(sub1[, 1:3])
walkdown <- whicj(kClust$size==49)
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12], pch=19,ylab="Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
x1<0
negative <- x1 < 0
sum(negative, na.rm=TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 subset(pm0, State.Code==36 & county.site %in% both)
cnt0 <- subset(pm0, State.Code==36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID ==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID ==2008)
x0sub <-pm0sub$Sample.Value
x1sub <-pm1sub$Sample.Value
dates0 <- as.Date(as.chareacter(pm0sub$Date), "%Y%m%d")
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0, x0sub, pch)=20
plot(dates0, x0sub, pch=20)
abline(lwd=2,na.rm=TRUE)
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
plot(dates1, x1sub, pch=20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
mn0<- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn0)
mn1<- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state=names(mn0), mean=mn0)
d1 <- data.frame(state=names(mn1), mean=mn1)
mrg <- merge(d0, d1, by="state")
dim(mrg)
head(mrg)
rge
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segment(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y,]
setwd("~/Documents/reproducible_research/week1/assignment/RepData_PeerAssessment1")
dact <- read.csv(unz("./activity.zip", "activity.csv"))
as.Date(dact$date, format="%Y-%m-%d")
pos_na <- which(is.na(fact$steps))
vec_m  <- rep(mean(fact$steps, na.rm = TRUE), times=length(pos_na))
fact[pos_na, 1] = vec_m
rm(vec_m, pos_na)
nna <- sum(is.na(dact$steps))
pos_na <- which(is.na(fact$steps))
vec_m  <- rep(mean(fact$steps, na.rm = TRUE), times=length(pos_na))
fact[pos_na, 1] = vec_m
rm(vec_m, pos_na)
nna <- sum(is.na(dact$steps))
fact <- dact
pos_na <- which(is.na(fact$steps))
vec_m  <- rep(mean(fact$steps, na.rm = TRUE), times=length(pos_na))
fact[pos_na, 1] = vec_m
rm(vec_m, pos_na)
library(timeDate)
fact["TypeDay"] <- factor(isWeekday(fact$date), levels=c(TRUE,FALSE), labels=c("weekday", "weekend"))
fact["WeekDay"] <- weekdays(fact$date)
fact["WeekDay"] <- weekdays(as.Date(fact$date))
head(fact)
